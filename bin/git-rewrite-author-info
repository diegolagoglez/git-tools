#!/bin/bash

RUN=no
OLD_EMAIL=
CORRECT_NAME=
CORRECT_EMAIL=

function error() {
	echo "ERROR: $1" 1>&2
	exit $2
}

function rewrite_author_info() {
	# Documentation: https://help.github.com/articles/changing-author-info/
	git filter-branch --env-filter '
	 
	OLD_EMAIL="diego.lago.gonzalez@gmail.com"
	CORRECT_NAME="Diego Lago"
	CORRECT_EMAIL="diego.lago@hp.com"
	 
	if [ "$GIT_COMMITTER_EMAIL" = "$OLD_EMAIL" ]
	then
	    export GIT_COMMITTER_NAME="$CORRECT_NAME"
	    export GIT_COMMITTER_EMAIL="$CORRECT_EMAIL"
	fi
	if [ "$GIT_AUTHOR_EMAIL" = "$OLD_EMAIL" ]
	then
	    export GIT_AUTHOR_NAME="$CORRECT_NAME"
	    export GIT_AUTHOR_EMAIL="$CORRECT_EMAIL"
	fi
	' --tag-name-filter cat -- --branches --tags
}

function credits() {
	echo "$(basename $0) - Utility to rewrite all history changing the author information."
	echo "GPLv3 2014 - Diego Lago <diego.lago.gonzalez@gmail>"
	echo
	echo " *** WARNING: This utility may be dangerous. Use with care. ***"
	echo
}

function usage() {
	echo "Usage: $(basename $0) [options]"
	echo "Options:"
	echo " -o <email> : Set old email (matches will be replaced)."
	echo " -n <name>  : Set new name (to replace old one)."
	echo " -e <email> : Set new email (to replace old one)."
	echo " -r         : Actually run the script."
	echo " -h         : Show this help."
}

function push_help() {
	echo "TIP: If you have a remote repository, you have to force the push of this"
	echo "     changes with command: git push --force --tags origin 'refs/heads/*'"
}

function main() {
	while getopts ":ho:n:e:r" opt; do
		case "$opt" in
			"h")
				credits
				usage
				exit 0
			;;
			"o")
				OLD_EMAIL="$OPTARG"
			;;
			"n")
				CORRECT_NAME="$OPTARG"
			;;
			"e")
				CORRECT_EMAIL="$OPTARG"
			;;
			"r")
				RUN=yes
			;;
			\?)
				error "Invalid option: -$OPTARG" 1
			;;
			\:)
				error "Option -$OPTARG requires an argument." 2
			;;
		esac
	done

	if [ -z "$OLD_EMAIL" ]; then
		error "Must specify an old email (with -o option)."
	fi
	if [ -z "$CORRECT_NAME" ]; then
		error "Must specify a correct name (with -n option)."
	fi
	if [ -z "$CORRECT_EMAIL" ]; then
		error "Must specify a correct email (with -e option)."
	fi

	if [ "$RUN" == "yes" ]; then
		push_help
	else
		echo "  DRY-RUN    $OLD_EMAIL -> $CORRECT_NAME <$CORRECT_EMAIL>"
	fi
}

main "$@"
